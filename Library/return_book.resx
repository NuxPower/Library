<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>